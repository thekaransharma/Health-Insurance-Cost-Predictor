2024-05-05 23:01:04,819 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-05 23:01:04,820 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-05 23:01:04,820 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-05 23:01:04,821 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-05 23:01:04,839 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-05 23:01:04,877 - INFO - prediction - Model 'RandomForest' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-05 23:01:04,888 - INFO - prediction - Predictions for model 'RandomForest': 2965.898185519098 - Host: LAPTOP-OO138L9N
2024-05-05 23:01:19,334 - INFO - interface - Visualizing Model Results... - Host: LAPTOP-OO138L9N
2024-05-05 23:03:22,643 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-05 23:03:22,644 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-05 23:03:22,645 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-05 23:03:22,645 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-05 23:03:22,647 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-05 23:03:22,673 - INFO - prediction - Model 'RandomForest' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-05 23:03:22,680 - INFO - prediction - Predictions for model 'RandomForest': 2965.898185519098 - Host: LAPTOP-OO138L9N
2024-05-05 23:03:41,502 - INFO - interface - Visualizing Model Results... - Host: LAPTOP-OO138L9N
2024-05-06 01:54:52,100 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 01:54:52,100 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 01:54:52,106 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 01:54:52,110 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 01:54:52,122 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 01:54:52,138 - INFO - prediction - Model 'SVR' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 01:54:52,138 - ERROR - interface - Error in prediction: Input X contains NaN.
SVR does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\svm\_base.py", line 429, in predict
    X = self._validate_for_predict(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\svm\_base.py", line 607, in _validate_for_predict
    X = self._validate_data(
        ^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVR does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 01:55:03,285 - INFO - interface - Training Models... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:03,285 - INFO - model - Training Models... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:03,285 - INFO - model - Reading and Splitting Dataset... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:03,289 - INFO - preprocess - Preprocessing data for training... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:03,306 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 01:55:03,306 - INFO - preprocess - Handling missing data... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:03,324 - INFO - model - Training Models... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,178 - INFO - model - Evaluating Models... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,187 - INFO - model - RandomForest results: {'Mean Absolute Error (MAE)': 2558.626149401698, 'Mean Squared Error (MSE)': 21280667.045160882, 'R-squared (R²) Score': 0.8756372600021922, 'Root Mean Squared Error (RMSE)': 4613.097337490385} - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,195 - INFO - model - KNeighbors results: {'Mean Absolute Error (MAE)': 8366.208997000556, 'Mean Squared Error (MSE)': 146171195.07793364, 'R-squared (R²) Score': 0.14578568942087966, 'Root Mean Squared Error (RMSE)': 12090.128000891207} - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,203 - INFO - model - Linear results: {'Mean Absolute Error (MAE)': 4182.803777070157, 'Mean Squared Error (MSE)': 38935221.010640755, 'R-squared (R²) Score': 0.7724652729621758, 'Root Mean Squared Error (RMSE)': 6239.809372940872} - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,215 - INFO - model - Ridge results: {'Mean Absolute Error (MAE)': 4184.269957223627, 'Mean Squared Error (MSE)': 38951029.64027963, 'R-squared (R²) Score': 0.7723728884286776, 'Root Mean Squared Error (RMSE)': 6241.076000200576} - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,298 - INFO - model - SVR results: {'Mean Absolute Error (MAE)': 8715.953996231925, 'Mean Squared Error (MSE)': 191560621.05658436, 'R-squared (R²) Score': -0.11946696312302985, 'Root Mean Squared Error (RMSE)': 13840.542657590575} - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,302 - INFO - model - Saving Results... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,302 - INFO - model - Saving Models... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,302 - INFO - model - Saving RandomForest Model... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,326 - INFO - model - Saving KNeighbors Model... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,342 - INFO - model - Saving Linear Model... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,342 - INFO - model - Saving Ridge Model... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,342 - INFO - model - Saving SVR Model... - Host: LAPTOP-OO138L9N
2024-05-06 01:55:42,358 - INFO - model - Models trained and saved successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:01:40,193 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:01:40,193 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:01:40,193 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:01:40,193 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:01:40,198 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:01:40,217 - INFO - prediction - Model 'KNeighbors' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:01:40,218 - ERROR - interface - Error in prediction: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\neighbors\_regression.py", line 245, in predict
    neigh_dist, neigh_ind = self.kneighbors(X)
                            ^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\neighbors\_base.py", line 826, in kneighbors
    X = self._validate_data(X, accept_sparse="csr", reset=False, order="C")
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 22:01:55,033 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:01:55,033 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:01:55,033 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:01:55,033 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:01:55,039 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:01:55,044 - INFO - prediction - Model 'KNeighbors' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:01:55,044 - ERROR - interface - Error in prediction: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\neighbors\_regression.py", line 245, in predict
    neigh_dist, neigh_ind = self.kneighbors(X)
                            ^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\neighbors\_base.py", line 826, in kneighbors
    X = self._validate_data(X, accept_sparse="csr", reset=False, order="C")
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 22:02:05,261 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:05,261 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:05,261 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:05,261 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:02:05,261 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:05,271 - INFO - prediction - Model 'Linear' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:02:05,278 - ERROR - interface - Error in prediction: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 286, in predict
    return self._decision_function(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 269, in _decision_function
    X = self._validate_data(X, accept_sparse=["csr", "csc", "coo"], reset=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 22:02:06,753 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:06,753 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:06,753 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:06,753 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:02:06,757 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:06,757 - INFO - prediction - Model 'Linear' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:02:06,761 - ERROR - interface - Error in prediction: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 286, in predict
    return self._decision_function(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 269, in _decision_function
    X = self._validate_data(X, accept_sparse=["csr", "csc", "coo"], reset=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 22:02:08,145 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:08,145 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:08,145 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:08,145 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:02:08,153 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:08,154 - INFO - prediction - Model 'Linear' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:02:08,154 - ERROR - interface - Error in prediction: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 286, in predict
    return self._decision_function(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 269, in _decision_function
    X = self._validate_data(X, accept_sparse=["csr", "csc", "coo"], reset=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 22:02:58,579 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:58,579 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:58,579 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:58,579 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:02:58,585 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:02:58,627 - INFO - prediction - Model 'RandomForest' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:02:58,635 - INFO - prediction - Predictions for model 'RandomForest': 4682.190187265079 - Host: LAPTOP-OO138L9N
2024-05-06 22:03:10,731 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:10,731 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:10,731 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:10,731 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:03:10,736 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:10,736 - INFO - prediction - Model 'Linear' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:03:10,739 - ERROR - interface - Error in prediction: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 286, in predict
    return self._decision_function(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 269, in _decision_function
    X = self._validate_data(X, accept_sparse=["csr", "csc", "coo"], reset=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 22:03:12,168 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:12,173 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:12,173 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:12,173 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:03:12,175 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:12,175 - INFO - prediction - Model 'Linear' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:03:12,175 - ERROR - interface - Error in prediction: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 286, in predict
    return self._decision_function(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 269, in _decision_function
    X = self._validate_data(X, accept_sparse=["csr", "csc", "coo"], reset=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 22:03:18,639 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:18,639 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:18,639 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:18,639 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:03:18,639 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:18,664 - INFO - prediction - Model 'RandomForest' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:03:18,672 - INFO - prediction - Predictions for model 'RandomForest': 4682.190187265079 - Host: LAPTOP-OO138L9N
2024-05-06 22:03:23,029 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:23,029 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:23,030 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:23,030 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:03:23,031 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:23,035 - INFO - prediction - Model 'KNeighbors' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:03:23,035 - ERROR - interface - Error in prediction: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\neighbors\_regression.py", line 245, in predict
    neigh_dist, neigh_ind = self.kneighbors(X)
                            ^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\neighbors\_base.py", line 826, in kneighbors
    X = self._validate_data(X, accept_sparse="csr", reset=False, order="C")
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 22:03:27,195 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:27,195 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:27,195 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:27,197 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:03:27,200 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:27,200 - INFO - prediction - Model 'Linear' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:03:27,204 - ERROR - interface - Error in prediction: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 286, in predict
    return self._decision_function(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 269, in _decision_function
    X = self._validate_data(X, accept_sparse=["csr", "csc", "coo"], reset=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 22:03:31,368 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:31,382 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:31,384 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:31,384 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:03:31,384 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:31,408 - INFO - prediction - Model 'Ridge' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:03:31,408 - ERROR - interface - Error in prediction: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 286, in predict
    return self._decision_function(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 269, in _decision_function
    X = self._validate_data(X, accept_sparse=["csr", "csc", "coo"], reset=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 22:03:35,302 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:35,302 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:35,302 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:35,302 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:03:35,317 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:35,334 - INFO - prediction - Model 'SVR' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:03:35,334 - ERROR - interface - Error in prediction: Input X contains NaN.
SVR does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\svm\_base.py", line 429, in predict
    X = self._validate_for_predict(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\svm\_base.py", line 607, in _validate_for_predict
    X = self._validate_data(
        ^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
SVR does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 22:03:40,690 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:40,690 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:40,690 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:40,690 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:03:40,690 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:03:40,723 - INFO - prediction - Model 'RandomForest' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:03:40,734 - INFO - prediction - Predictions for model 'RandomForest': 4682.190187265079 - Host: LAPTOP-OO138L9N
2024-05-06 22:04:51,586 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:04:51,586 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:04:51,586 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:04:51,586 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:04:51,594 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:04:51,618 - INFO - prediction - Model 'RandomForest' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:04:51,629 - INFO - prediction - Predictions for model 'RandomForest': 4682.190187265079 - Host: LAPTOP-OO138L9N
2024-05-06 22:04:55,865 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:04:55,865 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:04:55,865 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:04:55,867 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:04:55,872 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:04:55,872 - INFO - prediction - Model 'Linear' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:04:55,872 - ERROR - interface - Error in prediction: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values - Host: LAPTOP-OO138L9N
Traceback (most recent call last):
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\interface.py", line 80, in predict_medical_costs
    prediction = self.predictor.predict(input_data, model)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\MOHD TARIQUE\iris-streamlit-main\src\prediction.py", line 78, in predict
    predictions = self.loaded_models.predict(data)[0]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 286, in predict
    return self._decision_function(X)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\linear_model\_base.py", line 269, in _decision_function
    X = self._validate_data(X, accept_sparse=["csr", "csc", "coo"], reset=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Python311\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2024-05-06 22:05:00,545 - INFO - prediction - Starting prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:05:00,545 - INFO - prediction - Preprocessing data... - Host: LAPTOP-OO138L9N
2024-05-06 22:05:00,545 - INFO - preprocess - Preprocessing data for prediction... - Host: LAPTOP-OO138L9N
2024-05-06 22:05:00,545 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: LAPTOP-OO138L9N
2024-05-06 22:05:00,549 - INFO - prediction - Loading models... - Host: LAPTOP-OO138L9N
2024-05-06 22:05:00,579 - INFO - prediction - Model 'RandomForest' loaded successfully. - Host: LAPTOP-OO138L9N
2024-05-06 22:05:00,586 - INFO - prediction - Predictions for model 'RandomForest': 4682.190187265079 - Host: LAPTOP-OO138L9N
2024-05-06 22:05:28,446 - INFO - interface - Visualizing Model Results... - Host: LAPTOP-OO138L9N
2024-07-23 12:25:02,347 - INFO - prediction - Starting prediction... - Host: DESKTOP-M0EJTUJ
2024-07-23 12:25:02,349 - INFO - prediction - Preprocessing data... - Host: DESKTOP-M0EJTUJ
2024-07-23 12:25:02,350 - INFO - preprocess - Preprocessing data for prediction... - Host: DESKTOP-M0EJTUJ
2024-07-23 12:25:02,351 - INFO - preprocess - Encoding categorical data... [Sex, Smoker, Region] - Host: DESKTOP-M0EJTUJ
2024-07-23 12:25:02,352 - INFO - prediction - Loading models... - Host: DESKTOP-M0EJTUJ
2024-07-23 12:25:02,415 - INFO - prediction - Model 'RandomForest' loaded successfully. - Host: DESKTOP-M0EJTUJ
2024-07-23 12:25:02,431 - INFO - prediction - Predictions for model 'RandomForest': 5792.298905455991 - Host: DESKTOP-M0EJTUJ
